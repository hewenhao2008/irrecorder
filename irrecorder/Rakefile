require 'serialport'
require 'colorize'

require 'yaml'
require 'json'
require 'highline'

require './lib/irrecorder'

@recorder = Recorder.new

task :commands, :input_file do |_, args|
  Rake::Task['commands:yaml'].execute args
end

namespace :commands do
  desc 'Read command list to be recorded from YAML file'
  task :yaml, :input_file do |_, args|
    abort('Input file is not provided') if args.input_file.nil?

    keys = YAML.load_file args.input_file

    begin
      @recorder.commands keys
    rescue error
      abort(error)
    end
  end

  #desc 'Read command list from keyboard'
  task :keyboard do
    #TODO Implement this
  end
end

task :port do
  Rake::Task['port:auto'].execute
end

namespace :port do
  desc 'Auto detect sensor port'
  task :auto do
    if @recorder.port.nil?
      port = Dir['/dev/*.usb*'].first

      abort('No sensor is detected') if port.nil?

      puts "Sensor detected at #{port.light_yellow}".light_white

      @recorder.port = port
    end
  end

  desc 'Select sensor port'
  task :select, :serialport do |_, args|
    abort(serialport) if args.serialport.nil?

    @recorder.port = "/dev/#{args.serialport}"
  end
end

desc 'Perform recording'
task :record => :port do
  #begin
    @recorder.record
  #rescue
  #  abort('Recoding failed')
  #end
end

task :output, [:output_file] => :record do |_, args|
  Rake::Task['output:yaml'].execute args
end

namespace :output do
  desc 'Write recorded sequences to YAML file'
  task :yaml, [:output_file] => :record do |_, args|
    abort('Output file is not provided') if args.output_file.nil?

    File.open args.output_file, 'w' do |f|
      f.write @recorder.records.to_yaml
    end
  end

  desc 'Write recorded sequences to JSON file'
  task :json, [:outupt_file] => :record do |_, args|
    abort('Output file is not provided') if args.output_file.nil?

    File.open args.output_file, 'w' do |f|
      f.write @recorder.records.to_json
    end
  end
end